{% doc %}
  @prompt
    Generate a grid of thumbnails showing all SKUs in the displayed collection. The thumbnail size should be adjustable from 50px to 120px. When you hover over a thumbnail you should display the metafield Thumbnail Text Description from the product., When hovering over a thumbnail text should be displayed below the grid. This text should be taken from the product metafield "Thumbnail Text Description"., Always show what thumbnail is selected by making the border color darker and display the description by default.

{% enddoc %}
{% assign ai_gen_id = block.id | replace: '_', '' | downcase %}

{% style %}
  .ai-sku-grid-container-{{ ai_gen_id }} {
    background-color: {{ block.settings.background_color }};
  }

  .ai-sku-grid-{{ ai_gen_id }} {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax({{ block.settings.thumbnail_size }}px, 1fr));
    gap: {{ block.settings.grid_gap }}px;
    padding: {{ block.settings.container_padding }}px;
  }

  .ai-sku-thumbnail-{{ ai_gen_id }} {
    position: relative;
    width: {{ block.settings.thumbnail_size }}px;
    height: {{ block.settings.thumbnail_size }}px;
    border-radius: {{ block.settings.border_radius }}px;
    overflow: hidden;
    cursor: pointer;
    transition: transform 0.3s ease, box-shadow 0.3s ease, border-color 0.3s ease;
    border: {{ block.settings.border_width }}px solid {{ block.settings.border_color }};
  }

  .ai-sku-thumbnail-{{ ai_gen_id }}:hover {
    transform: scale({{ block.settings.hover_scale }});
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
  }

  .ai-sku-thumbnail-{{ ai_gen_id }}.selected {
    border-color: {{ block.settings.selected_border_color }};
    border-width: {{ block.settings.selected_border_width }}px;
  }

  .ai-sku-thumbnail-image-{{ ai_gen_id }} {
    width: 100%;
    height: 100%;
    object-fit: cover;
    display: block;
  }

  .ai-sku-thumbnail-placeholder-{{ ai_gen_id }} {
    width: 100%;
    height: 100%;
    background-color: #f4f4f4;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .ai-sku-thumbnail-placeholder-{{ ai_gen_id }} svg {
    width: 60%;
    height: 60%;
    opacity: 0.5;
  }

  .ai-sku-description-area-{{ ai_gen_id }} {
    padding: {{ block.settings.description_padding }}px;
    min-height: {{ block.settings.description_min_height }}px;
    background-color: {{ block.settings.description_bg_color }};
    border-top: {{ block.settings.description_border_width }}px solid {{ block.settings.description_border_color }};
    display: flex;
    align-items: center;
    justify-content: center;
    text-align: center;
  }

  .ai-sku-description-text-{{ ai_gen_id }} {
    color: {{ block.settings.description_text_color }};
    font-size: {{ block.settings.description_font_size }}px;
    line-height: 1.4;
    transition: opacity 0.3s ease;
    max-width: 100%;
    opacity: 1;
  }

  .ai-sku-description-placeholder-{{ ai_gen_id }} {
    color: {{ block.settings.placeholder_text_color }};
    font-size: {{ block.settings.description_font_size }}px;
    font-style: italic;
    opacity: 0.6;
  }

  .ai-sku-grid-empty-{{ ai_gen_id }} {
    text-align: center;
    padding: 40px 20px;
    color: {{ block.settings.text_color }};
    font-size: 16px;
  }

  @media screen and (max-width: 749px) {
    .ai-sku-grid-{{ ai_gen_id }} {
      grid-template-columns: repeat(auto-fill, minmax({{ block.settings.thumbnail_size | times: 0.8 }}px, 1fr));
      gap: {{ block.settings.grid_gap | times: 0.8 }}px;
      padding: {{ block.settings.container_padding | times: 0.8 }}px;
    }

    .ai-sku-thumbnail-{{ ai_gen_id }} {
      width: {{ block.settings.thumbnail_size | times: 0.8 }}px;
      height: {{ block.settings.thumbnail_size | times: 0.8 }}px;
    }

    .ai-sku-description-area-{{ ai_gen_id }} {
      padding: {{ block.settings.description_padding | times: 0.8 }}px;
    }

    .ai-sku-description-text-{{ ai_gen_id }},
    .ai-sku-description-placeholder-{{ ai_gen_id }} {
      font-size: {{ block.settings.description_font_size | times: 0.9 }}px;
    }
  }
{% endstyle %}

<sku-grid-{{ ai_gen_id }}
  class="ai-sku-grid-container-{{ ai_gen_id }}"
  {{ block.shopify_attributes }}
>
  {% if block.settings.collection != blank and block.settings.collection.products.size > 0 %}
    <div class="ai-sku-grid-{{ ai_gen_id }}">
      {% for product in block.settings.collection.products %}
        <a
          href="{{ product.url }}"
          class="ai-sku-thumbnail-{{ ai_gen_id }}{% if forloop.first %} selected{% endif %}"
          data-product-id="{{ product.id }}"
          data-description="{{ product.metafields.custom.thumbnail_text_description | escape }}"
          data-title="{{ product.title | escape }}"
        >
          {% if product.featured_image %}
            <img
              src="{{ product.featured_image | image_url: width: 240 }}"
              alt="{{ product.featured_image.alt | default: product.title | escape }}"
              class="ai-sku-thumbnail-image-{{ ai_gen_id }}"
              loading="lazy"
              width="240"
              height="240"
            >
          {% else %}
            <div class="ai-sku-thumbnail-placeholder-{{ ai_gen_id }}">
              {{ 'product-1' | placeholder_svg_tag }}
            </div>
          {% endif %}
        </a>
      {% endfor %}
    </div>

    <div class="ai-sku-description-area-{{ ai_gen_id }}">
      <div class="ai-sku-description-text-{{ ai_gen_id }}" id="ai-sku-description-{{ ai_gen_id }}">
        {% assign first_product = block.settings.collection.products.first %}
        {% if first_product.metafields.custom.thumbnail_text_description != blank %}
          {{ first_product.metafields.custom.thumbnail_text_description }}
        {% elsif block.settings.show_product_title and first_product.title %}
          {{ first_product.title }}
        {% else %}
          <span class="ai-sku-description-placeholder-{{ ai_gen_id }}">{{ block.settings.placeholder_text }}</span>
        {% endif %}
      </div>
    </div>
  {% else %}
    <div class="ai-sku-grid-empty-{{ ai_gen_id }}">
      {% if block.settings.collection == blank %}
        Please select a collection to display products.
      {% else %}
        No products found in this collection.
      {% endif %}
    </div>
  {% endif %}
</sku-grid-{{ ai_gen_id }}>

<script>
  (function() {
    class SkuGrid{{ ai_gen_id }} extends HTMLElement {
      constructor() {
        super();
        this.selectedThumbnail = null;
      }

      connectedCallback() {
        this.thumbnails = this.querySelectorAll('.ai-sku-thumbnail-{{ ai_gen_id }}');
        this.descriptionElement = this.querySelector('#ai-sku-description-{{ ai_gen_id }}');
        this.selectedThumbnail = this.querySelector('.ai-sku-thumbnail-{{ ai_gen_id }}.selected');
        this.setupEventListeners();
      }

      setupEventListeners() {
        this.thumbnails.forEach((thumbnail) => {
          thumbnail.addEventListener('mouseenter', () => {
            this.selectThumbnail(thumbnail);
          });
        });
      }

      selectThumbnail(thumbnail) {
        if (this.selectedThumbnail) {
          this.selectedThumbnail.classList.remove('selected');
        }
        
        thumbnail.classList.add('selected');
        this.selectedThumbnail = thumbnail;
        
        this.updateDescription(thumbnail);
      }

      updateDescription(thumbnail) {
        const description = thumbnail.dataset.description;
        const title = thumbnail.dataset.title;
        
        let textToShow = '';
        if (description && description.trim() !== '') {
          textToShow = description;
        } else if ({{ block.settings.show_product_title | json }} && title) {
          textToShow = title;
        } else {
          textToShow = '<span class="ai-sku-description-placeholder-{{ ai_gen_id }}">{{ block.settings.placeholder_text | escape }}</span>';
        }

        this.descriptionElement.innerHTML = textToShow;
      }
    }

    customElements.define('sku-grid-{{ ai_gen_id }}', SkuGrid{{ ai_gen_id }});
  })();
</script>

{% schema %}
{
  "name": "SKU Grid",
  "tag": null,
  "settings": [
    {
      "type": "header",
      "content": "Collection"
    },
    {
      "type": "collection",
      "id": "collection",
      "label": "Collection"
    },
    {
      "type": "header",
      "content": "Layout"
    },
    {
      "type": "range",
      "id": "thumbnail_size",
      "min": 50,
      "max": 120,
      "step": 5,
      "unit": "px",
      "label": "Thumbnail size",
      "default": 80
    },
    {
      "type": "range",
      "id": "grid_gap",
      "min": 5,
      "max": 30,
      "step": 5,
      "unit": "px",
      "label": "Grid gap",
      "default": 15
    },
    {
      "type": "range",
      "id": "container_padding",
      "min": 0,
      "max": 50,
      "step": 5,
      "unit": "px",
      "label": "Container padding",
      "default": 20
    },
    {
      "type": "header",
      "content": "Style"
    },
    {
      "type": "range",
      "id": "border_radius",
      "min": 0,
      "max": 20,
      "step": 2,
      "unit": "px",
      "label": "Border radius",
      "default": 8
    },
    {
      "type": "range",
      "id": "border_width",
      "min": 0,
      "max": 4,
      "step": 1,
      "unit": "px",
      "label": "Border width",
      "default": 1
    },
    {
      "type": "color",
      "id": "border_color",
      "label": "Border color",
      "default": "#e6e6e6"
    },
    {
      "type": "range",
      "id": "selected_border_width",
      "min": 1,
      "max": 6,
      "step": 1,
      "unit": "px",
      "label": "Selected border width",
      "default": 3
    },
    {
      "type": "color",
      "id": "selected_border_color",
      "label": "Selected border color",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "Background color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Text color",
      "default": "#000000"
    },
    {
      "type": "header",
      "content": "Hover effects"
    },
    {
      "type": "range",
      "id": "hover_scale",
      "min": 1,
      "max": 1.2,
      "step": 0.1,
      "label": "Hover scale",
      "default": 1.1
    },
    {
      "type": "header",
      "content": "Description area"
    },
    {
      "type": "range",
      "id": "description_min_height",
      "min": 40,
      "max": 120,
      "step": 10,
      "unit": "px",
      "label": "Minimum height",
      "default": 60
    },
    {
      "type": "range",
      "id": "description_padding",
      "min": 10,
      "max": 40,
      "step": 5,
      "unit": "px",
      "label": "Padding",
      "default": 20
    },
    {
      "type": "range",
      "id": "description_font_size",
      "min": 12,
      "max": 20,
      "step": 1,
      "unit": "px",
      "label": "Font size",
      "default": 14
    },
    {
      "type": "range",
      "id": "description_border_width",
      "min": 0,
      "max": 4,
      "step": 1,
      "unit": "px",
      "label": "Border width",
      "default": 1
    },
    {
      "type": "color",
      "id": "description_bg_color",
      "label": "Background color",
      "default": "#f8f8f8"
    },
    {
      "type": "color",
      "id": "description_text_color",
      "label": "Text color",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "description_border_color",
      "label": "Border color",
      "default": "#e6e6e6"
    },
    {
      "type": "header",
      "content": "Fallback options"
    },
    {
      "type": "checkbox",
      "id": "show_product_title",
      "label": "Show product title as fallback",
      "default": true
    },
    {
      "type": "text",
      "id": "placeholder_text",
      "label": "Placeholder text",
      "default": "No description available"
    },
    {
      "type": "color",
      "id": "placeholder_text_color",
      "label": "Placeholder text color",
      "default": "#666666"
    }
  ],
  "presets": [
    {
      "name": "SKU Grid"
    }
  ]
}
{% endschema %}