{% doc %}
  @prompt
    A'd like to add a block here where thumbnails of all products in the product collection is displayed. The thumbnails should be taken from a metafield in the product. When you hover over the thubmnail I'd like to show the product color that should also be from a metafield in the product., make thumbnails smaller. show the hover over text below the thumbnail grid., I only need two metafields. Image and description to be shown on hover., make padding above and below info area adjustable.

{% enddoc %}
{% assign ai_gen_id = block.id | replace: '_', '' | downcase %}

{% style %}
  .ai-collection-thumbs-container-{{ ai_gen_id }} {
    padding: {{ block.settings.section_padding }}px;
    background-color: {{ block.settings.background_color }};
  }

  .ai-collection-thumbs-{{ ai_gen_id }} {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax({{ block.settings.thumbnail_size }}px, 1fr));
    gap: {{ block.settings.grid_gap }}px;
    margin-bottom: {{ block.settings.info_area_top_padding }}px;
  }

  .ai-collection-thumb-item-{{ ai_gen_id }} {
    position: relative;
    border-radius: {{ block.settings.border_radius }}px;
    overflow: hidden;
    transition: transform 0.3s ease;
    cursor: pointer;
  }

  .ai-collection-thumb-item-{{ ai_gen_id }}:hover {
    transform: translateY(-{{ block.settings.hover_lift }}px);
  }

  .ai-collection-thumb-image-{{ ai_gen_id }} {
    width: 100%;
    height: {{ block.settings.thumbnail_size }}px;
    object-fit: cover;
    display: block;
  }

  .ai-collection-thumb-placeholder-{{ ai_gen_id }} {
    width: 100%;
    height: {{ block.settings.thumbnail_size }}px;
    background-color: #f4f4f4;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .ai-collection-thumb-placeholder-{{ ai_gen_id }} svg {
    width: 60%;
    height: 60%;
    opacity: 0.5;
  }

  .ai-collection-hover-info-{{ ai_gen_id }} {
    background-color: {{ block.settings.info_background_color }};
    padding: 15px 20px;
    margin-bottom: {{ block.settings.info_area_bottom_padding }}px;
    border-radius: {{ block.settings.border_radius }}px;
    text-align: center;
    min-height: 60px;
    display: flex;
    flex-direction: column;
    justify-content: center;
    transition: all 0.3s ease;
  }

  .ai-collection-hover-title-{{ ai_gen_id }} {
    font-size: {{ block.settings.info_title_size }}px;
    font-weight: 600;
    margin-bottom: 8px;
    color: {{ block.settings.info_text_color }};
    opacity: 0;
    transform: translateY(10px);
    transition: all 0.3s ease;
  }

  .ai-collection-hover-description-{{ ai_gen_id }} {
    font-size: {{ block.settings.info_description_size }}px;
    color: {{ block.settings.info_text_color }};
    opacity: 0;
    transform: translateY(10px);
    transition: all 0.3s ease;
    line-height: 1.4;
  }

  .ai-collection-hover-info-{{ ai_gen_id }}.active .ai-collection-hover-title-{{ ai_gen_id }},
  .ai-collection-hover-info-{{ ai_gen_id }}.active .ai-collection-hover-description-{{ ai_gen_id }} {
    opacity: 1;
    transform: translateY(0);
  }

  .ai-collection-hover-description-{{ ai_gen_id }} {
    transition-delay: 0.1s;
  }

  .ai-collection-default-text-{{ ai_gen_id }} {
    font-size: {{ block.settings.info_title_size }}px;
    color: {{ block.settings.info_text_color }};
    opacity: 0.6;
  }

  @media screen and (max-width: 749px) {
    .ai-collection-thumbs-{{ ai_gen_id }} {
      grid-template-columns: repeat(auto-fill, minmax({{ block.settings.thumbnail_size | times: 0.8 }}px, 1fr));
      gap: {{ block.settings.grid_gap | times: 0.7 }}px;
      margin-bottom: {{ block.settings.info_area_top_padding | times: 0.7 }}px;
    }

    .ai-collection-thumbs-container-{{ ai_gen_id }} {
      padding: {{ block.settings.section_padding | times: 0.7 }}px;
    }

    .ai-collection-thumb-image-{{ ai_gen_id }},
    .ai-collection-thumb-placeholder-{{ ai_gen_id }} {
      height: {{ block.settings.thumbnail_size | times: 0.8 }}px;
    }

    .ai-collection-hover-info-{{ ai_gen_id }} {
      margin-bottom: {{ block.settings.info_area_bottom_padding | times: 0.7 }}px;
    }
  }
{% endstyle %}

<collection-thumbnails-{{ ai_gen_id }}
  class="ai-collection-thumbs-container-{{ ai_gen_id }}"
  {{ block.shopify_attributes }}
>
  <div class="ai-collection-thumbs-{{ ai_gen_id }}">
    {% if block.settings.collection != blank %}
      {% for product in block.settings.collection.products limit: block.settings.product_limit %}
        {% liquid
          assign thumbnail_image = product.metafields[block.settings.image_namespace][block.settings.image_key]
          assign product_description = product.metafields[block.settings.description_namespace][block.settings.description_key]
        %}
        <a 
          href="{{ product.url }}" 
          class="ai-collection-thumb-item-{{ ai_gen_id }}"
          data-product-id="{{ product.id }}"
          data-product-title="{{ product.title | escape }}"
          data-product-description="{{ product_description | escape }}"
        >
          {% if thumbnail_image %}
            <img
              src="{{ thumbnail_image | image_url: width: 200 }}"
              alt="{{ product.title | escape }}"
              class="ai-collection-thumb-image-{{ ai_gen_id }}"
              loading="lazy"
              width="200"
              height="{{ block.settings.thumbnail_size }}"
            >
          {% else %}
            <div class="ai-collection-thumb-placeholder-{{ ai_gen_id }}">
              {{ 'product-1' | placeholder_svg_tag }}
            </div>
          {% endif %}
        </a>
      {% endfor %}
    {% else %}
      {% for i in (1..8) %}
        <div 
          class="ai-collection-thumb-item-{{ ai_gen_id }}"
          data-product-title="Sample Product {{ i }}"
          data-product-description="This is a sample product description for product {{ i }}"
        >
          <div class="ai-collection-thumb-placeholder-{{ ai_gen_id }}">
            {{ 'product-1' | placeholder_svg_tag }}
          </div>
        </div>
      {% endfor %}
    {% endif %}
  </div>

  <div class="ai-collection-hover-info-{{ ai_gen_id }}">
    <div class="ai-collection-hover-title-{{ ai_gen_id }}"></div>
    <div class="ai-collection-hover-description-{{ ai_gen_id }}"></div>
    <div class="ai-collection-default-text-{{ ai_gen_id }}">{{ block.settings.default_text }}</div>
  </div>
</collection-thumbnails-{{ ai_gen_id }}>

<script>
  (function() {
    class CollectionThumbnails{{ ai_gen_id }} extends HTMLElement {
      constructor() {
        super();
      }

      connectedCallback() {
        this.setupHoverEffects();
        this.setupAccessibility();
      }

      setupHoverEffects() {
        const items = this.querySelectorAll('.ai-collection-thumb-item-{{ ai_gen_id }}');
        const infoContainer = this.querySelector('.ai-collection-hover-info-{{ ai_gen_id }}');
        const titleElement = this.querySelector('.ai-collection-hover-title-{{ ai_gen_id }}');
        const descriptionElement = this.querySelector('.ai-collection-hover-description-{{ ai_gen_id }}');
        const defaultText = this.querySelector('.ai-collection-default-text-{{ ai_gen_id }}');

        items.forEach((item) => {
          item.addEventListener('mouseenter', () => {
            const title = item.dataset.productTitle;
            const description = item.dataset.productDescription;

            if (title) {
              titleElement.textContent = title;
              if (description) {
                descriptionElement.textContent = description;
              } else {
                descriptionElement.textContent = '';
              }
              
              defaultText.style.display = 'none';
              infoContainer.classList.add('active');
            }
          });

          item.addEventListener('mouseleave', () => {
            infoContainer.classList.remove('active');
            setTimeout(() => {
              if (!infoContainer.classList.contains('active')) {
                defaultText.style.display = 'block';
                titleElement.textContent = '';
                descriptionElement.textContent = '';
              }
            }, 300);
          });
        });
      }

      setupAccessibility() {
        const items = this.querySelectorAll('.ai-collection-thumb-item-{{ ai_gen_id }}');
        
        items.forEach((item, index) => {
          item.setAttribute('tabindex', '0');
          item.setAttribute('role', 'button');
          item.setAttribute('aria-label', `View product ${index + 1}`);
          
          item.addEventListener('keydown', (event) => {
            if (event.key === 'Enter' || event.key === ' ') {
              event.preventDefault();
              item.click();
            }
          });
        });
      }
    }

    customElements.define('collection-thumbnails-{{ ai_gen_id }}', CollectionThumbnails{{ ai_gen_id }});
  })();
</script>

{% schema %}
{
  "name": "Collection Thumbnails",
  "settings": [
    {
      "type": "header",
      "content": "Collection"
    },
    {
      "type": "collection",
      "id": "collection",
      "label": "Collection"
    },
    {
      "type": "range",
      "id": "product_limit",
      "min": 4,
      "max": 50,
      "step": 2,
      "label": "Products to show",
      "default": 16
    },
    {
      "type": "header",
      "content": "Metafields"
    },
    {
      "type": "text",
      "id": "image_namespace",
      "label": "Image namespace",
      "default": "custom"
    },
    {
      "type": "text",
      "id": "image_key",
      "label": "Image key",
      "default": "thumbnail"
    },
    {
      "type": "text",
      "id": "description_namespace",
      "label": "Description namespace",
      "default": "custom"
    },
    {
      "type": "text",
      "id": "description_key",
      "label": "Description key",
      "default": "description"
    },
    {
      "type": "header",
      "content": "Layout"
    },
    {
      "type": "range",
      "id": "thumbnail_size",
      "min": 40,
      "max": 120,
      "step": 5,
      "unit": "px",
      "label": "Thumbnail size",
      "default": 80
    },
    {
      "type": "range",
      "id": "grid_gap",
      "min": 5,
      "max": 25,
      "step": 5,
      "unit": "px",
      "label": "Grid gap",
      "default": 10
    },
    {
      "type": "range",
      "id": "section_padding",
      "min": 0,
      "max": 80,
      "step": 5,
      "unit": "px",
      "label": "Section padding",
      "default": 20
    },
    {
      "type": "range",
      "id": "border_radius",
      "min": 0,
      "max": 20,
      "step": 2,
      "unit": "px",
      "label": "Border radius",
      "default": 8
    },
    {
      "type": "range",
      "id": "hover_lift",
      "min": 0,
      "max": 10,
      "step": 1,
      "unit": "px",
      "label": "Hover lift effect",
      "default": 3
    },
    {
      "type": "header",
      "content": "Info area spacing"
    },
    {
      "type": "range",
      "id": "info_area_top_padding",
      "min": 10,
      "max": 80,
      "step": 5,
      "unit": "px",
      "label": "Space above info area",
      "default": 20
    },
    {
      "type": "range",
      "id": "info_area_bottom_padding",
      "min": 0,
      "max": 80,
      "step": 5,
      "unit": "px",
      "label": "Space below info area",
      "default": 0
    },
    {
      "type": "header",
      "content": "Info area"
    },
    {
      "type": "text",
      "id": "default_text",
      "label": "Default text",
      "default": "Hover over a thumbnail to see product details"
    },
    {
      "type": "color",
      "id": "info_background_color",
      "label": "Info background color",
      "default": "#f8f8f8"
    },
    {
      "type": "color",
      "id": "info_text_color",
      "label": "Info text color",
      "default": "#000000"
    },
    {
      "type": "range",
      "id": "info_title_size",
      "min": 12,
      "max": 24,
      "step": 1,
      "unit": "px",
      "label": "Title font size",
      "default": 16
    },
    {
      "type": "range",
      "id": "info_description_size",
      "min": 10,
      "max": 18,
      "step": 1,
      "unit": "px",
      "label": "Description font size",
      "default": 14
    },
    {
      "type": "header",
      "content": "Colors"
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "Background color",
      "default": "#ffffff"
    }
  ],
  "presets": [
    {
      "name": "Collection Thumbnails"
    }
  ]
}
{% endschema %}