{% doc %}
  @prompt
    Make a section with some taxt on the left side and a collection carousel on the right.

{% enddoc %}
{% assign ai_gen_id = block.id | replace: '_', '' | downcase %}

{% style %}
  .ai-text-carousel-{{ ai_gen_id }} {
    display: flex;
    align-items: center;
    gap: {{ block.settings.gap }}px;
    padding: {{ block.settings.padding }}px 0;
  }

  .ai-text-carousel__text-{{ ai_gen_id }} {
    flex: 0 0 {{ block.settings.text_width }}%;
    padding-right: 20px;
  }

  .ai-text-carousel__heading-{{ ai_gen_id }} {
    font-size: {{ block.settings.heading_size }}px;
    color: {{ block.settings.heading_color }};
    margin: 0 0 16px 0;
  }

  .ai-text-carousel__description-{{ ai_gen_id }} {
    font-size: {{ block.settings.text_size }}px;
    color: {{ block.settings.text_color }};
    line-height: 1.5;
    margin: 0 0 24px 0;
  }

  .ai-text-carousel__button-{{ ai_gen_id }} {
    display: inline-block;
    padding: 12px 24px;
    background-color: {{ block.settings.button_color }};
    color: {{ block.settings.button_text_color }};
    text-decoration: none;
    border-radius: {{ block.settings.button_radius }}px;
    transition: background-color 0.3s ease;
  }

  .ai-text-carousel__button-{{ ai_gen_id }}:hover {
    background-color: {{ block.settings.button_hover_color }};
  }

  .ai-text-carousel__carousel-{{ ai_gen_id }} {
    flex: 1;
    position: relative;
    overflow: hidden;
  }

  .ai-text-carousel__carousel-wrapper-{{ ai_gen_id }} {
    display: flex;
    transition: transform 0.3s ease;gap: 16px;
  }

  .ai-text-carousel__product-card-{{ ai_gen_id }} {
    flex: 0 0 {{ block.settings.card_width }}px;
    background: {{ block.settings.card_background }};
    border-radius: {{ block.settings.card_radius }}px;
    overflow: hidden;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  }

  .ai-text-carousel__product-image-{{ ai_gen_id }} {
    width: 100%;
    height: {{ block.settings.image_height }}px;
    position: relative;
    overflow: hidden;
  }

  .ai-text-carousel__product-image-{{ ai_gen_id }} img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .ai-text-carousel__image-placeholder-{{ ai_gen_id }} {
    width: 100%;
    height: 100%;
    background-color: #f4f4f4;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .ai-text-carousel__image-placeholder-{{ ai_gen_id }} svg {
    width: 60%;
    height: 60%;
    opacity: 0.3;
  }

  .ai-text-carousel__product-info-{{ ai_gen_id }} {
    padding: 16px;
  }

  .ai-text-carousel__product-title-{{ ai_gen_id }} {
    font-size: 14px;
    font-weight: 600;
    color: {{ block.settings.card_text_color }};
    margin: 0 0 8px 0;
    line-height: 1.3;
  }

  .ai-text-carousel__product-price-{{ ai_gen_id }} {
    font-size: 16px;
    font-weight: 700;
    color: {{ block.settings.price_color }};
    margin: 0;
  }

  .ai-text-carousel__nav-{{ ai_gen_id }} {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    background: {{ block.settings.nav_color }};
    border: none;
    width: 40px;
    height: 40px;
    border-radius: 50%;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);
    transition: background-color 0.3s ease;
    z-index: 2;
  }

  .ai-text-carousel__nav-{{ ai_gen_id }}:hover {
    background: {{ block.settings.nav_hover_color }};
  }

  .ai-text-carousel__nav-{{ ai_gen_id }} svg {
    width: 20px;
    height: 20px;
    fill: {{ block.settings.nav_icon_color }};
  }

  .ai-text-carousel__nav--prev-{{ ai_gen_id }} {
    left: -20px;
  }

  .ai-text-carousel__nav--next-{{ ai_gen_id }} {
    right: -20px;
  }

  .ai-text-carousel__empty-state-{{ ai_gen_id }} {
    text-align: center;
    padding: 40px 20px;
    color: #666;
    font-style: italic;
  }

  @media screen and (max-width: 768px) {
    .ai-text-carousel-{{ ai_gen_id }} {
      flex-direction: column;
      gap: 32px;
    }

    .ai-text-carousel__text-{{ ai_gen_id }} {
      flex: none;
      width: 100%;
      padding-right: 0;
      text-align: center;
    }

    .ai-text-carousel__product-card-{{ ai_gen_id }} {
      flex: 0 0 {{ block.settings.card_width | times: 0.8 }}px;
    }
  }
{% endstyle %}<collection-carousel-{{ ai_gen_id }}
  class="ai-text-carousel-{{ ai_gen_id }}"
  {{ block.shopify_attributes }}
>
  <div class="ai-text-carousel__text-{{ ai_gen_id }}">
    {% if block.settings.heading != blank %}
      <h2 class="ai-text-carousel__heading-{{ ai_gen_id }}">{{ block.settings.heading }}</h2>
    {% endif %}
    
    {% if block.settings.description != blank %}
      <div class="ai-text-carousel__description-{{ ai_gen_id }}">{{ block.settings.description }}</div>
    {% endif %}
    
    {% if block.settings.button_text != blank and block.settings.button_link != blank %}
      <a href="{{ block.settings.button_link }}" class="ai-text-carousel__button-{{ ai_gen_id }}">
        {{ block.settings.button_text }}
      </a>
    {% endif %}
  </div>

  <div class="ai-text-carousel__carousel-{{ ai_gen_id }}">
    {% if block.settings.collection != blank and block.settings.collection.products.size > 0 %}
      <div class="ai-text-carousel__carousel-wrapper-{{ ai_gen_id }}" data-carousel-wrapper>
        {% for product in block.settings.collection.products limit: block.settings.products_limit %}
          <div class="ai-text-carousel__product-card-{{ ai_gen_id }}">
            <a href="{{ product.url }}" class="ai-text-carousel__product-image-{{ ai_gen_id }}">
              {% if product.featured_image %}
                <img
                  src="{{ product.featured_image | image_url: width: 400 }}"
                  alt="{{ product.featured_image.alt | escape }}"
                  loading="lazy"
                  width="400"
                  height="{{ block.settings.image_height }}"
                >
              {% else %}
                <div class="ai-text-carousel__image-placeholder-{{ ai_gen_id }}">
                  {{ 'product-apparel-1' | placeholder_svg_tag }}
                </div>
              {% endif %}
            </a>
            <div class="ai-text-carousel__product-info-{{ ai_gen_id }}">
              <h3 class="ai-text-carousel__product-title-{{ ai_gen_id }}">
                <a href="{{ product.url }}">{{ product.title }}</a>
              </h3>
              <div class="ai-text-carousel__product-price-{{ ai_gen_id }}">
                {{ product.price | money }}
              </div>
            </div>
          </div>
        {% endfor %}
      </div>

      <button class="ai-text-carousel__nav-{{ ai_gen_id }} ai-text-carousel__nav--prev-{{ ai_gen_id }}" data-nav="prev" aria-label="Previous products">
        <svg viewBox="0 0 24 24">
          <path d="M15 18l-6-6 6-6"/>
        </svg>
      </button>

      <button class="ai-text-carousel__nav-{{ ai_gen_id }} ai-text-carousel__nav--next-{{ ai_gen_id }}" data-nav="next" aria-label="Next products">
        <svg viewBox="0 0 24 24">
          <path d="M9 18l6-6-6-6"/>
        </svg>
      </button>
    {% else %}
      <div class="ai-text-carousel__empty-state-{{ ai_gen_id }}">
        Next, select a collection to display products
      </div>
    {% endif %}
  </div>
</collection-carousel-{{ ai_gen_id }}>

<script>
  (function() {
    class CollectionCarousel{{ ai_gen_id }} extends HTMLElement {
      constructor() {
        super();
        this.currentIndex = 0;
        this.visibleCards = 3;
      }

      connectedCallback() {
        this.wrapper = this.querySelector('[data-carousel-wrapper]');
        this.prevBtn = this.querySelector('[data-nav="prev"]');
        this.nextBtn = this.querySelector('[data-nav="next"]');
        this.cards = this.querySelectorAll('.ai-text-carousel__product-card-{{ ai_gen_id }}');

        if (!this.wrapper || this.cards.length === 0) return;

        this.calculateVisibleCards();
        this.setupEventListeners();
        this.updateCarousel();
        
        window.addEventListener('resize', () => {
          this.calculateVisibleCards();
          this.updateCarousel();
        });
      }

      calculateVisibleCards() {
        const containerWidth = this.wrapper.parentElement.offsetWidth;
        const cardWidth = {{ block.settings.card_width }} + 16;
        this.visibleCards = Math.floor(containerWidth / cardWidth);
        this.maxIndex = Math.max(0, this.cards.length - this.visibleCards);
      }

      setupEventListeners() {
        this.prevBtn.addEventListener('click', () => {
          this.currentIndex = Math.max(0, this.currentIndex - 1);
          this.updateCarousel();
        });

        this.nextBtn.addEventListener('click', () => {
          this.currentIndex = Math.min(this.maxIndex, this.currentIndex + 1);
          this.updateCarousel();
        });
      }

      updateCarousel() {
        const cardWidth = {{ block.settings.card_width }} + 16;
        const translateX = -this.currentIndex * cardWidth;
        this.wrapper.style.transform = `translateX(${translateX}px)`;

        this.prevBtn.style.display = this.currentIndex === 0 ? 'none' : 'flex';
        this.nextBtn.style.display = this.currentIndex >= this.maxIndex ? 'none' : 'flex';
      }
    }

    customElements.define('collection-carousel-{{ ai_gen_id }}', CollectionCarousel{{ ai_gen_id }});
  })();
</script>

{% schema %}
{
  "name": "Text and carousel",
  "settings": [
    {
      "type": "header",
      "content": "Content"
    },
    {
      "type": "text",
      "id": "heading",
      "label": "Heading",
      "default": "Featured collection"
    },
    {
      "type": "richtext",
      "id": "description",
      "label": "Description",
      "default": "<p>Discover our latest products and find your perfect match.</p>"
    },
    {
      "type": "text",
      "id": "button_text",
      "label": "Button text",
      "default": "View all"
    },
    {
      "type": "url",
      "id": "button_link",
      "label": "Button link"
    },
    {
      "type": "collection",
      "id": "collection",
      "label": "Collection"
    },
    {
      "type": "range",
      "id": "products_limit",
      "min": 4,
      "max": 20,
      "step": 1,
      "label": "Products to show",
      "default": 8
    },
    {
      "type": "header",
      "content": "Layout"
    },
    {
      "type": "range",
      "id": "text_width",
      "min": 30,
      "max": 60,
      "step": 5,
      "unit": "%",
      "label": "Text width",
      "default": 40
    },
    {
      "type": "range",
      "id": "gap",
      "min": 20,
      "max": 80,
      "step": 10,
      "unit": "px",
      "label": "Gap between sections",
      "default": 40
    },
    {
      "type": "range",
      "id": "padding",
      "min": 20,
      "max": 100,
      "step": 10,
      "unit": "px",
      "label": "Vertical padding",
      "default": 60
    },
    {
      "type": "header",
      "content": "Text style"
    },
    {
      "type": "range",
      "id": "heading_size",
      "min": 20,
      "max": 60,
      "step": 2,
      "unit": "px",
      "label": "Heading size",
      "default": 32
    },
    {
      "type": "range",
      "id": "text_size",
      "min": 12,
      "max": 20,
      "step": 1,
      "unit": "px",
      "label": "Text size",
      "default": 16
    },
    {
      "type": "color",
      "id": "heading_color",
      "label": "Heading color",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Text color",
      "default": "#666666"
    },
    {
      "type": "header",
      "content": "Button style"
    },
    {
      "type": "color",
      "id": "button_color",
      "label": "Button color",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "button_text_color",
      "label": "Button text color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "button_hover_color",
      "label": "Button hover color",
      "default": "#333333"
    },
    {
      "type": "range",
      "id": "button_radius",
      "min": 0,
      "max": 30,
      "step": 2,
      "unit": "px",
      "label": "Button border radius",
      "default": 6
    },
    {
      "type": "header",
      "content": "Product cards"
    },
    {
      "type": "range",
      "id": "card_width",
      "min": 200,
      "max": 350,
      "step": 10,
      "unit": "px",
      "label": "Card width",
      "default": 280
    },
    {
      "type": "range",
      "id": "image_height",
      "min": 200,
      "max": 400,
      "step": 10,
      "unit": "px",
      "label": "Image height",
      "default": 300
    },
    {
      "type": "range",
      "id": "card_radius",
      "min": 0,
      "max": 20,
      "step": 2,
      "unit": "px",
      "label": "Card border radius",
      "default": 8
    },
    {
      "type": "color",
      "id": "card_background",
      "label": "Card background",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "card_text_color",
      "label": "Card text color",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "price_color",
      "label": "Price color",
      "default": "#000000"
    },
    {
      "type": "header",
      "content": "Navigation"
    },
    {
      "type": "color",
      "id": "nav_color",
      "label": "Navigation background",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "nav_hover_color",
      "label": "Navigation hover",
      "default": "#f5f5f5"
    },
    {
      "type": "color",
      "id": "nav_icon_color",
      "label": "Navigation icon color",
      "default": "#000000"
    }
  ],
  "presets": [
    {
      "name": "Text and carousel"
    }
  ]
}
{% endschema %}